#!/usr/bin/env python

import operator as op

from daentools.sequences import triangle_numbers
from daentools.mathutils import factors
from daentools.misc import first

def problem_12():
    """
    What is the value of the first triangle number to have over five
    hundred divisors?

    The sequence of triangle numbers is generated by
    adding the natural numbers. So the 7th triangle number would be 1 +
    2 + 3 + 4 + 5 + 6 + 7 = 28.

    Let us list the factors of the first seven triangle numbers:
     1: 1
     3: 1,3
     6: 1,2,3,6
    10: 1,2,5,10
    15: 1,3,5,15
    21: 1,3,7,21
    28: 1,2,4,7,14,28
    We can see that 28 is the first triangle number to have over five divisors.
    """
    num_factors = lambda x: reduce(op.mul, [e + 1 for (p,e) in factors(x)])
    return first((tri for tri in triangle_numbers() if num_factors(tri) > 500))

if __name__ == '__main__':
    print problem_12()
